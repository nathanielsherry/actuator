#!/usr/bin/python3

import click

@click.command()
@click.option("-l", "--log-level", default='info', help='Select log level from [error, warn, info, debug, trace]')
@click.argument("expression")
def run(log_level, expression):

    from actuator import parser, source as mod_source, sink as mod_sink, package, util, log
    import sys

    monitor = None
    sink = None
    source = None
    operator = None

    log.set_level(log_level)

    #full expression
    components = parser.parse_actuator_expression(expression)
    source = components['source']
    sink = components['sink']
    operator = components['operator']
    monitor = components['monitor']
    expression = components['expression']


    import yaml
    log.debug("Loaded monitor: {}".format(yaml.dump(monitor)))
    log.debug("Loaded operator: {}".format(yaml.dump(operator)))
    log.debug("Loaded Sink: {}".format(yaml.dump(sink)))

    util.set_global('expression', expression)

    try:
        monitor.start(operator, sink)
    except KeyboardInterrupt:
        pass
    except BrokenPipeError:
        pass

    util.run_shutdown_hooks()

    sys.stderr.close()
    
if __name__ == "__main__":
    run()
